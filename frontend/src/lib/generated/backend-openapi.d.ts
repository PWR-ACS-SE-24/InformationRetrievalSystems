/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Main */
        get: operations["main_api_health_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/categories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Human Categories */
        get: operations["get_human_categories_api_categories_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Search */
        post: operations["search_api_search_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** ArxivPaperModelBase */
        ArxivPaperModelBase: {
            /** Arxiv Id */
            arxiv_id: string;
            /** Doi */
            doi: string | null;
            /** Authors */
            authors?: string[];
            /** Submitter */
            submitter: string;
            /** Title */
            title: string;
            /** Abstract */
            abstract: string;
            /** Journal Ref */
            journal_ref?: string | null;
            /** Categories */
            categories?: string[];
            /** Comments */
            comments?: string | null;
            /**
             * Create Date
             * Format: date-time
             */
            create_date: string;
            /**
             * Update Date
             * Format: date-time
             */
            update_date: string;
        };
        /** CategoryModel */
        CategoryModel: {
            /**
             * Id
             * @description ID of the category
             */
            id: string;
            /**
             * Name
             * @description Human-friendly name of the category
             */
            name: string;
            /**
             * Subcategories
             * @description List of subcategories in this category
             */
            subcategories: components["schemas"]["SubcategoryModel"][];
        };
        /** FacetBy */
        FacetBy: {
            /**
             * Field
             * @description Field to facet by
             * @enum {string}
             */
            field: "categories" | "authors";
            /**
             * Value
             * @description Value to facet by
             */
            value: string;
        };
        /** FacetByResult */
        FacetByResult: {
            /**
             * Field
             * @description Field to facet by
             * @enum {string}
             */
            field: "categories" | "authors";
            /**
             * Value
             * @description Value to facet by
             */
            value: string;
            /**
             * Count
             * @description Count of papers in this facet
             */
            count: number;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** Pagination */
        Pagination: {
            /**
             * Total Records
             * @description Total number of results
             */
            total_records: number;
            /**
             * Total Pages
             * @description Total number of pages
             */
            total_pages: number;
            /**
             * Current Page
             * @description Current page number
             */
            current_page: number;
            /**
             * Size
             * @description Number of results per page
             */
            size: number;
        };
        /** SearchQuery */
        SearchQuery: {
            /**
             * Search
             * @description Search term to query
             */
            search: string;
            /**
             * Author
             * @description Author name to search for
             */
            author?: string | null;
            /**
             * Subject
             * @description Subject categories to search in
             * @default []
             */
            subject: string[] | null;
            /**
             * Year Start
             * @description Year range start for the search
             * @default 1986
             */
            year_start: number;
            /**
             * Year End
             * @description Year range end for the search
             * @default 2025
             */
            year_end: number;
            /**
             * Published
             * @description Only return papers that have been published (have a DOI)
             * @default false
             */
            published: boolean;
            /**
             * Facet By
             * @description Set facets to search in
             * @default []
             */
            facet_by: components["schemas"]["FacetBy"][] | null;
        };
        /** SearchResponse */
        SearchResponse: {
            /** @description Pagination information for the search results */
            pagination: components["schemas"]["Pagination"];
            /**
             * Time To Search
             * @description Time taken to search in ms
             */
            time_to_search: number;
            /**
             * Papers
             * @description List of papers found in the search
             */
            papers: components["schemas"]["ArxivPaperModelBase"][];
            /**
             * Available Facets
             * @description Facets available for the search
             */
            available_facets: components["schemas"]["FacetByResult"][];
            /**
             * Found Per Year
             * @description Number of papers found per year
             */
            found_per_year: {
                [key: string]: number;
            };
        };
        /** SubcategoryModel */
        SubcategoryModel: {
            /**
             * Id
             * @description ID of the subcategory
             */
            id: string;
            /**
             * Name
             * @description Human-friendly name of the subcategory
             */
            name: string;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    main_api_health_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_human_categories_api_categories_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CategoryModel"][];
                };
            };
        };
    };
    search_api_search_post: {
        parameters: {
            query?: {
                /** @description Skip n first results */
                page?: number;
                /** @description Limit results */
                perpage?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SearchQuery"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SearchResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
